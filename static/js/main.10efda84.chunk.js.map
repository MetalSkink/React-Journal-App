{"version":3,"sources":["firebase/firebase-config.js","helpers/loadNotes.js","types/types.js","helpers/fileUpload.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","type","payload","addNewNote","setNotes","startSaveNote","dispatch","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","day","dayjs","date","className","format","style","display","onChange","e","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","class","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","setError","err","removeError","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","icon","message","logout","advancedFormat","require","extend","JournalEntry","backgroundSize","backgroundImage","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","ui","msgError","loading","isFormValid","validator","isEmail","trim","length","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","password2","createUserWithEmailAndPassword","updateProfile","startRegisterEmailPassword","AuthRouter","path","component","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","localStorage","setItem","location","pathname","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","exact","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.10efda84.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCbHzahQDjbO-HAqtG1i9Ew8yXnAwDWAow\",\r\n    authDomain: \"react-app-journal-ac184.firebaseapp.com\",\r\n    projectId: \"react-app-journal-ac184\",\r\n    storageBucket: \"react-app-journal-ac184.appspot.com\",\r\n    messagingSenderId: \"642276327705\",\r\n    appId: \"1:642276327705:web:76edbc245bff2eb273c588\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import { db } from \"../firebase/firebase-config\";\r\n\r\nexport const loadNotes = async(uid) =>{\r\n    const notesSnap = await db.collection(`/${ uid }/journal/notes`).get();\r\n    const notes = []\r\n\r\n    notesSnap.forEach(snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n\r\n    return notes;\r\n}","export const types = {\r\n    login:  '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew:    '[Notes] New Note',\r\n    notesActive:    '[Notes] Set Active Note',\r\n    notesLoad:      '[Notes] Load notes',\r\n    notesUpdated:   '[Notes] Updated note',\r\n    notesFileUrl:   '[Notes] Updated image url',\r\n    notesDelete:    '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n}","export const fileUpload = async (file) =>{\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dn67ngbky/upload';\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n        if ( resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n}","import { db } from \"../firebase/firebase-config\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\nexport const startNewNote = () =>{\r\n    return async( dispatch, getState ) =>{\r\n        const { uid } = getState().auth;\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n\r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(addNewNote(doc.id, newNote));\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n})\r\n\r\nexport const setNotes = ( notes ) =>({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startLoadingNotes= (uid)=>{\r\n    return async(dispatch) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes))\r\n\r\n    }\r\n}\r\n\r\nexport const startSaveNote = (note)=>{\r\n    return async(dispatch, getState) =>{\r\n        if (!note.url){\r\n            delete note.url;\r\n        }\r\n        const { uid } = getState().auth;\r\n        const noteToFirestore = {...note};\r\n        delete noteToFirestore.id;\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n        dispatch(refreshNote(note.id,note));\r\n        Swal.fire('Saved', note.title, 'success')\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note) =>({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note:{\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const startUploading = ( file )=>{\r\n    return async( dispatch,getState ) => {\r\n        const {active: activeNote} = getState().notes;\r\n        Swal.fire({\r\n            title: 'Saved',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url= fileUrl;\r\n        dispatch(startSaveNote(activeNote))\r\n        Swal.close();\r\n    }\r\n}\r\n\r\n// react-journal\r\n\r\nexport const startDeleting = (id) => {\r\n    return async (dispatch, getState)=>{\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id));\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const notesLogout= () => ({\r\n    type: types.notesLogoutCleaning\r\n})","import { useState } from 'react'\r\n\r\nexport const useForm = (initialState={}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) =>{\r\n        setValues(newFormState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) =>{\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return[values, handleInputChange, reset]\r\n}","import React from 'react';\r\nimport dayjs from \"dayjs\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {active} = useSelector(state => state.notes);\r\n    const day = dayjs(active.date);\r\n\r\n    const handleSave = () =>{\r\n        dispatch(startSaveNote(active));\r\n    }\r\n\r\n    const handlePictureUpload= () =>{\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>{day.format('D MMMM YYYY')}</span>\r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{display: 'none'}}\r\n                onChange={handleFileChange}\r\n                ></input>\r\n            <div>\r\n                <button className=\"btn\"\r\n                        onClick={handlePictureUpload}>\r\n                    <i class=\"fas fa-camera\"></i>\r\n                    Subir imagen\r\n                </button>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleSave}>\r\n                    <i class=\"far fa-save\"></i>\r\n                    Guardar\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active } = useSelector(state => state.notes);\r\n    const [formValues,handleInputChange,reset ] = useForm(active);\r\n    const {title, body, id} = formValues;\r\n\r\n    const activeId = useRef(active.id);\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleting(id))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(active.id !== activeId.current){\r\n            reset(active);\r\n            activeId.current= active.id;\r\n        }\r\n    }, [active, reset]);\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(formValues.id,{...formValues}))\r\n    }, [formValues, dispatch])\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar/>\r\n            <div className=\"notes__content\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"A great power\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={ handleInputChange }/>\r\n                \r\n                <textarea \r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={ handleInputChange }/>\r\n                {\r\n                active.url &&\r\n                <div className=\"notes__image\">\r\n                    <img src={active.url} alt=\"referencia\"/>\r\n                </div>\r\n                }\r\n            </div>\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}>\r\n                    <i class=\"fas fa-trash\"></i>\r\n                    Borrar entrada\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Selecciona una entrada\r\n                <br/>\r\n                o crea una :D\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError,\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading,\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading,\r\n});","import { types } from \"../types/types\";\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config'\r\nimport { finishLoading, startLoading } from \"./ui\";\r\nimport Swal from 'sweetalert2'\r\nimport { notesLogout } from \"./notes\";\r\n\r\nexport const startLoginEmailPassword = (email, password) =>{\r\n    return (dispatch) =>{\r\n        dispatch(startLoading());\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({user})=>{\r\n                dispatch(login(user.uid,user.displayName));\r\n                dispatch(finishLoading());\r\n            }).catch(e => {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: e.message,\r\n                });\r\n                dispatch(finishLoading());\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin= () =>{\r\n    return ( dispatch )=>{\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then( ({user}) =>{\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n    }\r\n}\r\n\r\nexport const startRegisterEmailPassword = (email, password, name) =>{\r\n    return (dispatch) =>{\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async ({user}) =>{\r\n                await user.updateProfile({\r\n                    displayName: name\r\n                });\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n            .catch(e => {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: e.message,\r\n                });\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload:{\r\n        uid,\r\n        displayName\r\n    }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async ( dispatch ) => {\r\n        await firebase.auth().signOut();\r\n        dispatch(notesLogout());\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import React from 'react'\r\nimport dayjs from \"dayjs\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n// advancedFormat permite usar la fecha ordinal entre otras opciones\r\nconst advancedFormat = require(\"dayjs/plugin/advancedFormat\");\r\ndayjs.extend(advancedFormat);\r\n\r\nexport const JournalEntry = ({id,date,title,body,url}) => {\r\n    const day = dayjs(date);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch(activeNote(id,{id,date,title,body,url}));\r\n    }\r\n\r\n    return (\r\n        <div className=\"journal__entry pointer animate__animated animate__fadeIn animate__fast\" onClick={ handleEntryClick }>\r\n            {url &&\r\n                <div \r\n                className=\"journal__entry-picture\"\r\n                style={{\r\n                    backgroundSize:'cover',\r\n                    backgroundImage: `url(${url})`\r\n                }}></div>\r\n            }\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    { body }\r\n                </p>\r\n            </div>\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{day.format(\"dddd\")}</span>\r\n                <h4>{day.format(\"Do\")}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n    \r\n    // const entries =[1,2,3,4,5,6,7,8,9,10];\r\n\r\n    const {notes} = useSelector(state => state.notes);\r\n\r\n    \r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map( note =>(\r\n                    <JournalEntry \r\n                        key={note.id}\r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () =>{\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    const handleAddNew = () =>{\r\n        dispatch(startNewNote());\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar mt-1\">\r\n                <h3>\r\n                <i className=\"far fa-user\"></i>\r\n                    <span> { name } </span>\r\n                </h3>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleLogout }>\r\n                    <i class=\"fas fa-sign-out-alt\"></i>\r\n                    Cerrar Sesión\r\n                </button>\r\n            </div>\r\n            <div className=\"journal__new-entry\"\r\n                 onClick= { handleAddNew }>\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    Nueva entrada\r\n                </p>\r\n            </div>\r\n            <JournalEntries/>\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n    const { active } = useSelector(state => state.notes)\r\n    \r\n    return (\r\n        <div className=\"journal__main-content\">\r\n            <Sidebar/>\r\n            <main>\r\n                { active \r\n                    ? <NoteScreen/>\r\n                    : <NothingSelected/>}\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport { removeError, setError } from '../../actions/ui'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport validator from 'validator';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { msgError,loading } = useSelector(state => state.ui);\r\n\r\n    const [formValues,handleInputChange ] = useForm({\r\n        email: '',\r\n        password: ''\r\n        // email: 'nando@gmail.com',\r\n        // password: 'contramuysegura333'\r\n    });\r\n\r\n    const {email, password} = formValues;\r\n\r\n    const handleLogin=(e) =>{\r\n        e.preventDefault();\r\n        if (isFormValid()) {\r\n            dispatch(startLoginEmailPassword(email, password));\r\n        }\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin())\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if(!validator.isEmail(email)){\r\n            dispatch(setError('Email no es valido'));\r\n            return false;\r\n        }else if(password.trim().length < 5){\r\n            dispatch(setError('La contraseña debe ser de almenos 5 caracteres'));\r\n            return false;\r\n        }\r\n        dispatch(removeError());\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn animate__fast\">\r\n            <h3 className=\"auth__title\">Login Screen</h3>\r\n            { msgError && \r\n            <div className=\"auth__alert-error\">\r\n                {msgError}\r\n            </div> }\r\n            <form onSubmit={ handleLogin }\r\n                    >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={ handleInputChange }/>\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={ handleInputChange } />\r\n                <button type=\"submit\"\r\n                        className=\"btn btn-primary btn-block\"\r\n                        disabled={ loading }>\r\n                    Login\r\n                </button>\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Iniciar sesion con redes sociales</p>\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick= {handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Link to=\"/auth/register\"\r\n                        className=\"link\">Crear una cuenta nueva</Link>\r\n                        \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterEmailPassword } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {msgError} = useSelector(state => state.ui)\r\n\r\n    const [formValues,handleInputChange ] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n        // name: 'Steve',\r\n        // email: 'nando@gmail.com',\r\n        // password: 'contramuysegura333',\r\n        // password2: 'contramuysegura333'\r\n    });\r\n\r\n    const {name, email, password, password2} = formValues;\r\n\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault();\r\n        if (isFormValid()) {\r\n            dispatch(startRegisterEmailPassword(email,password,name))\r\n        }\r\n    }\r\n\r\n    const isFormValid = () =>{\r\n        if(name.trim().length === 0){\r\n            dispatch(setError('El nombre es requerido'));\r\n            return false;\r\n        } else if ( !validator.isEmail(email) ){\r\n            dispatch(setError('Email no es valido'));\r\n            return false;\r\n        }else if ( password !== password2 ){\r\n            dispatch(setError('Las contraseñas no coinciden'));\r\n            return false;\r\n        }else if ( password.trim().length < 5 ){\r\n            dispatch(setError('Las constraseñas deben ser de almenos 5 caracteres'));\r\n            return false;\r\n        }\r\n        dispatch(removeError());\r\n        return true;\r\n    }\r\n    \r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn animate__fast\">\r\n            <h3 className=\"auth__title\">Register Screen</h3>\r\n            { msgError && \r\n            <div className=\"auth__alert-error\">\r\n                {msgError}\r\n            </div> }\r\n\r\n            <form onSubmit={ handleLogin }>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ name }\r\n                    onChange= { handleInputChange } />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange= { handleInputChange } />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange= { handleInputChange }  />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={ password2 }\r\n                    onChange= { handleInputChange }/>\r\n                <button type=\"submit\" \r\n                        className=\"btn btn-primary btn-block mb-5\">\r\n                    Register\r\n                </button>\r\n                <Link to=\"/auth/login\"\r\n                        className=\"link\">¿Ya tienes una cuenta?</Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route \r\n                        path=\"/auth/login\"\r\n                        component={LoginScreen}/>\r\n                    <Route\r\n                        path=\"/auth/register\"\r\n                        component={RegisterScreen}/>                \r\n                    <Redirect to=\"/auth/login\"></Redirect>\r\n                </Switch>\r\n            </div>\r\n            <div className=\"helper\">\r\n                <h2>Ayuda:</h2>\r\n                <p>\r\n                    <strong>\r\n                    Puedes crearte una cuenta, logearte con la cuenta de prueba o tambien logearte con tu cuenta de google\r\n                    <br/>\r\n                    </strong>\r\n                    Correo: nando@gmail.com<br/>\r\n                    Password: contramuysegura333 \r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n                component={(props) =>( \r\n                    (!isAuthenticated)\r\n                        ? (<Component {...props}/>)\r\n                        : (<Redirect to=\"/\"/>)\r\n                )}/>            \r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    // console.log(rest.location.pathname);\r\n    localStorage.setItem('lastPath',rest.location.pathname);\r\n\r\n    return (\r\n        <Route {...rest}\r\n                component={(props) =>( \r\n                    (isAuthenticated)\r\n                        ? (<Component {...props}/>)\r\n                        : (<Redirect to=\"/auth\"/>)\r\n                )}/>            \r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom'\r\nimport { JournalScreen } from '../components/journal/JournalScreen'\r\nimport { AuthRouter } from './AuthRouter'\r\nimport { firebase } from '../firebase/firebase-config';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if( user?.uid ){\r\n                dispatch( login( user.uid, user.displayName ));\r\n                setIsLoggedIn(true);\r\n                dispatch(startLoadingNotes(user.uid));\r\n            } else {\r\n                setIsLoggedIn(false);                \r\n            }\r\n            setChecking(false);\r\n        })\r\n    },[dispatch, setChecking, setIsLoggedIn])\r\n\r\n    if (checking) {\r\n        return (\r\n            <h1>Wait...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path=\"/auth\"\r\n                        component={AuthRouter}\r\n                        isAuthenticated={ isLoggedIn }/>\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={JournalScreen}\r\n                        isAuthenticated={ isLoggedIn }/>\r\n                    <Redirect to=\"/auth\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError:null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action)=>{\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            } \r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError: null\r\n            } \r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            }         \r\n        default:\r\n            return state;\r\n    }\r\n}","/*\r\n    {\r\n        notes : [],\r\n        active: null,\r\n        active: {\r\n            id: 'ddadadas'\r\n            title: '',\r\n            body: '',\r\n            imageUrl: '',\r\n            date: 44654631\r\n        }\r\n    }\r\n*/\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return{\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes]\r\n            }\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload)\r\n            }\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\n","import { types } from \"../types/types\";\r\n/*\r\n    {\r\n        uid:\r\n        name:\r\n    }\r\n*/\r\n\r\nexport const authReducer= (state={}, action)=>{\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return { }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport {Provider} from 'react-redux'\r\nimport { store } from './store/store'\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\n\nReactDOM.render(\n\n    <JournalApp />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}